FROM node:12 AS builder

WORKDIR /app

# Copy the application source code
COPY . /app

# Install dependencies and build the Angular application
RUN export NODE_OPTIONS=--openssl-legacy-provider \
    && npm install \
    && npm run build

FROM nginx

ARG SOURCE
ARG COMMIT_HASH
ARG COMMIT_ID
ARG BUILD_TIME
LABEL source=${SOURCE}
LABEL commit_hash=${COMMIT_HASH}
LABEL commit_id=${COMMIT_ID}
LABEL build_time=${BUILD_TIME}

ENV base_path=/usr/share/nginx/html
ENV i18n_path=${base_path}/assets/i18n

ARG container_user=mosip
ARG container_user_group=mosip
ARG container_user_uid=1001
ARG container_user_gid=1001
ARG preregistration_i18n_bundle_url_arg=http://artifactory-service/artifactory/libs-release-local/i18n/pre-registration-i18n-bundle.zip
ENV preregistration_i18n_bundle_url_env=${preregistration_i18n_bundle_url_arg}

# Install necessary packages and create user
RUN apt-get -y update \
    && apt-get install -y unzip wget curl \
    && groupadd -g ${container_user_gid} ${container_user_group} \
    && useradd -u ${container_user_uid} -g ${container_user_group} -s /bin/sh -m ${container_user} \
    && mkdir -p /var/run/nginx /var/tmp/nginx \
    && chown -R ${container_user}:${container_user} /usr/share/nginx /var/run/nginx /var/tmp/nginx

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Add Nginx configuration
COPY ./nginx.conf /etc/nginx/nginx.conf
COPY default.conf /etc/nginx/conf.d/

# Select container user for all tasks
USER ${container_user_uid}:${container_user_gid}

EXPOSE 8080

CMD wget -q --show-progress "${preregistration_i18n_bundle_url_env}" -O "${i18n_path}"/pre-registration-i18n-bundle.zip; \
    cd ${i18n_path} ; \
    nginx ; \
    sleep infinity

